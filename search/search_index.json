{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Gonzalez Analytics","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-names]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"vault-azure/","title":"Vault Azure Connection","text":""},{"location":"vault-azure/#create-azure-policy","title":"Create Azure Policy","text":"<pre><code># Mount the OIDC auth method\npath \"sys/auth/oidc\" {\n  capabilities = [ \"create\", \"read\", \"update\", \"delete\", \"sudo\" ]\n}\n\n# Configure the OIDC auth method\npath \"auth/oidc/*\" {\n  capabilities = [ \"create\", \"read\", \"update\", \"delete\", \"list\" ]\n}\n\n# Write ACL policies\npath \"sys/policies/acl/*\" {\n  capabilities = [ \"create\", \"read\", \"update\", \"delete\", \"list\" ]\n}\n\n# List available secrets engines to retrieve accessor ID\npath \"sys/mounts\" {\n  capabilities = [ \"read\" ]\n}\n\n# Manage secrets engines\npath \"sys/mounts/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n\n# List, create, update, and delete key/value secrets\npath \"secret/*\"\n{\n  capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\", \"sudo\"]\n}\n</code></pre>"},{"location":"vault-azure/#setup-the-azure-config-in-vault-via-the-cli","title":"Setup the Azure config in Vault via the CLI","text":"<pre><code>vault write auth/oidc/config \\\n    oidc_discovery_url=\"https://login.microsoftonline.com/&lt;azure-tenant-id&gt;/v2.0\" \\\n    oidc_client_id=\"&lt;azure-client-id&gt;\" \\\n    oidc_client_secret=\"&lt;azure-secret&gt;\" \\\n    default_role=\"azure-developers\"\n</code></pre>"},{"location":"vault-azure/#create-the-vault-role-that-will-work-with-azurel","title":"Create the Vault role that will work with Azurel]=","text":"<pre><code>vault write auth/oidc/role/azure-developers \\\n    user_claim=\"email\" \\\n    groups_claim=\"groups\" \\\n    role_type=\"oidc\" \\\n    oidc_scopes=\"https://graph.microsoft.com/.default\" \\\n    allowed_redirect_uris=\"\"http://localhost:8250/oidc/callback\",https://&lt;url-redirect &gt;.us/ui/vault/auth/oidc/oidc/callback\"\n    policies=\"azure-developers\" \\\n    ttl=1h  \n</code></pre>"},{"location":"vault/","title":"Vault AWS Connection","text":""},{"location":"vault/#created-aws-resources","title":"Created AWS Resources","text":"<p>Before you configure the HCP Vault AWS auth method, you must create the necessary resources in AWS. The AWS auth method will require an IAM policy that permits the appropriate access for the auth method, an IAM user with programmatic access, and one or more roles that you will assign to other AWS services that require authentication to Vault.</p>"},{"location":"vault/#create-iam-policy","title":"Create IAM Policy","text":"<p>You will now create the IAM policy for your IAM User</p> <pre><code>{\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n {\n   \"Effect\": \"Allow\",\n   \"Action\": [\n     \"ec2:DescribeInstances\",\n     \"iam:GetInstanceProfile\",\n     \"iam:GetUser\",\n     \"iam:ListRoles\",\n     \"iam:GetRole\"\n   ],\n   \"Resource\": \"*\"\n }\n ]\n}\n</code></pre>"},{"location":"vault/#create-connection-to-vault-via-aws-user","title":"Create connection to Vault via AWS User","text":"<p>Enable aws auth on your vault instance.</p> <pre><code>vault auth enable aws\n</code></pre> <p>Check to see if the vault auth aws method has been enabled.</p> <pre><code>vault auth list\n</code></pre> <p>Next connect the IAM role you created in AWS to the Vault aws auth backend. This will configure the aws auth method with access to your AWS account using the Access key ID and Secret Access Key previously created for the IAM User you created in AWS.</p> <pre><code>vault write auth/aws/config/client secret_key=&lt;secret-key&gt; access_key=&lt;access-key&gt;\n</code></pre>"},{"location":"vault/#create-vault-role-for-connection-to-aws-iam-role","title":"Create Vault role for connection to AWS IAM Role","text":"<p>Configure the aws auth method to trust the AWS IAM role previously created and attach the vault-policy-for-aws-ec2role to the token provided by the aws auth method. Replace  with the actual IAM Role arn you created in AWS. <pre><code>vault write auth/aws/role/vault-role-for-aws-ec2role \\\n     auth_type=iam \\\n     bound_iam_principal_arn=&lt;iam-arn&gt; \\\n     policies=default,allinonepolicy\n</code></pre> <pre><code>vault write auth/approle/role/vault-role-for-aws-ec2role \\\n    secret_id_ttl=10m \\\n    token_num_uses=0 \\\n    token_ttl=20m \\\n    token_max_ttl=30m \\\n    secret_id_num_uses=40\n</code></pre> <p>List the roles you creates for the aws auth method</p> <pre><code>vault list /auth/aws/role\n</code></pre> <pre><code>vault write auth/aws/role/vaultauth auth_type=iam \\\n              bound_iam_principal_arn=&lt;iam-arn&gt; policies=default,allinonepolicy max_ttl=500h\n</code></pre>"}]}